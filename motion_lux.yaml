blueprint:
  name: FINK - Motion-Activated Light with Conditional Lux and Configurable Day/Night Scenes
  description: >
    Turns on a light or scene when motion is detected, based on time for day/night settings,
    but only if the luminance is below a specified threshold. If luminance is above the threshold,
    the automation does nothing. Allows toggling between using scenes or directly controlling the light.
  domain: automation
  input:
    motion_sensor_entity:
      name: Motion Sensor Entity
      description: "Entity that triggers motion, e.g., binary_sensor.motion_sensor."
      selector:
        entity:
          domain: binary_sensor

    light_entity:
      name: Light Entity
      description: "Light to be controlled, e.g., light.living_room."
      selector:
        entity:
          domain: light

    use_day_night_scenes:
      name: Use Day/Night Scenes
      description: "Enable or disable using day and night scenes. If disabled, only the light will be turned on."
      selector:
        boolean: {}
      default: true

    day_scene:
      name: Day Scene
      description: "Home Assistant scene for day settings, e.g., scene.day_scene. (optional)"
      selector:
        entity:
          domain: scene
      default: {}

    night_scene:
      name: Night Scene
      description: "Home Assistant scene for night settings, e.g., scene.night_scene. (optional)"
      selector:
        entity:
          domain: scene
      default: {}

    luminance_entity:
      name: Luminance Sensor
      description: "Sensor entity measuring luminance, e.g., sensor.luminance_sensor."
      selector:
        entity:
          domain: sensor

    luminance_threshold:
      name: Luminance Threshold
      description: "Luminance level (in lux) below which the light or scene turns on."
      default: 50
      selector:
        number:
          min: 0
          max: 2000
          unit_of_measurement: lux

    day_start_time:
      name: Day Start Time
      description: "Time when the day scene should start (e.g., 07:00)."
      default: "07:00:00"
      selector:
        time: {}

    night_start_time:
      name: Night Start Time
      description: "Time when the night scene should start (e.g., 20:00)."
      default: "22:00:00"
      selector:
        time: {}

    no_motion_wait_time:
      name: No Motion Wait Time
      description: "Time (in seconds) to wait with no motion before turning off the light or scene."
      default: 30
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds

trigger:
  - platform: state
    entity_id: !input "motion_sensor_entity"
    from: "off"
    to: "on"
    id: "motion_detected"
  - platform: state
    entity_id: !input "motion_sensor_entity"
    from: "on"
    to: "off"
    for:
      seconds: !input "no_motion_wait_time"
    id: "no_motion"

action:
  - choose:
      - conditions:
          # Motion detected and lux is below threshold
          - condition: trigger
            id: "motion_detected"
          - condition: numeric_state
            entity_id: !input "luminance_entity"
            below: !input "luminance_threshold"
        sequence:
          - choose:
              - conditions:
                  # If using day/night scenes
                  - condition: template
                    value_template: !input use_day_night_scenes
                sequence:
                  - choose:
                      # During the day
                      - conditions:
                          - condition: time
                            after: !input "day_start_time"
                            before: !input "night_start_time"
                        sequence:
                          - service: scene.turn_on
                            target:
                              entity_id: !input "day_scene"
                      # During the night (crosses midnight)
                      - conditions:
                          - condition: or
                            conditions:
                              - condition: time
                                after: !input "night_start_time"
                              - condition: time
                                before: !input "day_start_time"
                        sequence:
                          - service: scene.turn_on
                            target:
                              entity_id: !input "night_scene"
              - conditions:
                  # If NOT using day/night scenes
                  - condition: template
                    value_template: not is_state('input_boolean.use_day_night_scenes', 'on')
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: !input "light_entity"

  # Turn off the light when no motion is detected
  - choose:
      - conditions:
          - condition: trigger
            id: "no_motion"
        sequence:
          - service: light.turn_off
            target:
              entity_id: !input "light_entity"

mode: restart
